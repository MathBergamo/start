version: '3.5'
services:
  db:
    image: postgres
    container_name: start-db
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=start
      - POSTGRES_PASSWORD=start
      - POSTGRES_DB=start
    volumes:
      - start-db-volume:/var/lib/postgresql/data
    restart: always
    networks:
      - startnetwork

  redis:
    image: redis:latest
    container_name: start-redis
    hostname: start-server-redis
    ports:
      - "6379:6379"
    volumes:
      - start-redis-volume:/var/lib/start-redis
    networks:
      - startnetwork

  zookeeper:
    hostname: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    hostname: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: start
      MONGO_INITDB_ROOT_PASSWORD: start
    volumes:
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: start
      ME_CONFIG_MONGODB_ADMINPASSWORD: start
      ME_CONFIG_MONGODB_URL: mongodb://start:start@mongo:27017/
      ME_CONFIG_BASICAUTH: false

volumes:
  start-db-volume:
    driver: local
  start-redis-volume:
    driver: local

networks:
  startnetwork:
    name: startnetwork-network